buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public'}
        maven {url 'https://mvnrepository.com/artifact/commons-validator/commons-validator'}
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.6'
    }
}

apply plugin: 'com.android.application'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    defaultConfig {
        applicationId "com.abheri.sunaad"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 9
        versionName "3.0"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationIdSuffix ".debug"
            debuggable true
            testCoverageEnabled = false
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace("app-debug.apk", "Sunaad-" + "Debug" + ".apk"))
                }
            }
            manifestPlaceholders = [appLabel: "SunaadDebug"]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [appLabel: "Sunaad"]
        }
    }
    productFlavors {
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.google.code.gson:gson:2.5'
    compile 'com.google.android.gms:play-services-analytics:8.3.0'
    compile 'com.android.support:design:23.0.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.6@aar') {
        transitive = true
    }
    compile 'commons-validator:commons-validator:1.5.1'
}



task switchToDebug(type: Copy) {
    description = 'Switches to DEBUG google-services.json'
    from "src/debug"
    include "google-services.json"
    into "."
}

task switchToRelease(type: Copy) {
    description = 'Switches to RELEASE google-services.json'
    from "src/release"
    include "google-services.json"
    into "."
}

afterEvaluate {
    processDebugGoogleServices.dependsOn switchToDebug
    processReleaseGoogleServices.dependsOn switchToRelease
}

